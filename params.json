{"name":"Angular State Handler","tagline":"Control view with routes and with extra functionalities for easy route management.","body":"# ANGULAR STATE HANDLER\r\n\r\nControl view with routes and providing extra functionalities for easy route management.\r\n\r\n## Initial Route Configuration\r\n\r\n    $stateHandleProvider\r\n      .when('/', {\r\n        templateUrl: 'views/main.html',\r\n        controller: 'MainCtrl',\r\n        controllerAs: 'main'\r\n      })\r\n      .when('/about', {\r\n        templateUrl: 'views/about.html',\r\n        controller: 'AboutCtrl',\r\n        controllerAs: 'about',\r\n        authentication: true\r\n      })\r\n      .when('/c/:prms',{\r\n        resolve:{\r\n          message:function(){\r\n          }\r\n        },\r\n        authentication: true\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/'\r\n      });\r\n      \r\n**Looks similar to the normal route configuration nothing too different.**\r\n\r\n## Assigning Routes Late\r\n\r\nNow you know, to set above configuration using pure angular code can only be done within \"app.config()\" . **Angular State Handler** allows to specify a route whenever you wish . For setting a route late you can use \"$stateHandle\" factory availabe . Below is how you can specify late routes using \"$stateHandle\":\r\n\r\n\r\n    $stateHandle\r\n      .when('/contact', {\r\n        templateUrl: 'views/main.html',\r\n        controller: 'AboutCtrl',\r\n        controllerAs: 'main'\r\n      });\r\n      \r\n**Looks nothing different from the configuration code just the difference is that we used \"$stateHandleProvider\" while configuration and \"$stateHandle\" for assigning late routes.**\r\n\r\n## View Handling\r\n\r\n**Javascript Observer Pattern** is used to handle view based on route changes(*To better understand about observer pattern you can visit http://bumbu.me/javascript-observer-publish-subscribe-pattern/*). Whereever params of a specific route is required you can publish for that route which will respond with parameters .Below is the related code :\r\n\r\n    angular.module('frameworkApp')\r\n      .controller('MainCtrl', function ($scope, $stateHandle) {\r\n      \r\n        // Here subscription is done to \"/c/:prms\"\r\n        $stateHandle.subscribe('main',\"/c/:prms\").response(function(params){\r\n          $scope.val.prm = params.prms;\r\n        });\r\n    });\r\n    \r\n**.subscribe(** *subscriber_name* **,** *path_or_expression* **)** **:**\r\n It takes two parameters:\r\n\r\n1st parameter -> Name of the subscriber used to uniquely identify a subscriber .Can be any string but it would be recommended to use name similar to the controller or directive or factory block in which its contained .\r\n\r\n2nd parameter -> path/expression to which to subscribe.\r\n\r\n**.response(** *callback_to_execute_on_publish* **)** **:**\r\n The callback will be executed when the path is set in the browser to which subscription was done .\r\n    \r\n> Note:- State change of an existing view you can see if you do not specify a \"template\" or \"templateUrl\" property to a route and you have subscribed for that route for which in the response function you are changing the view by changing $scope properties or by any other way (*See the third \"when\" block in the route configuration where no \"template\" or \"templateUrl\" property is specified*).You can even see in that route, \"controller\" property is also not specified .For those cases the controller before route stays till a route change happens in which any other controller is specified .","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}